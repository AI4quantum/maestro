apiVersion: maestro/v1alpha1
kind: Agent
metadata:
  name: All Papers
  labels:
    app: mas-example 
spec:
  model: llama3.1
  framework: beeai
  mode: remote
  description: Uses the fetch papers tool in order to retreive the recently released papers given a subject.
  instructions: |
    Input:
              • category (string) # e.g. "quantum-ph"
              • max_results (int)  # e.g. "5" for the 5 most recent papers.

    Task:
    Call the fetch papers tool to search for all papers on `category` published. All the functionality is already implemented in the funciton, simply execute the function with the given parameters as the input, and then return the output (which should be titles of research papers) into a list.
    Directly print out the list in the output.
  code: |
    import urllib.request
    import xml.etree.ElementTree as ET
    from datetime import datetime, timedelta

    def fetch_arxiv_papers(subject: str, max_results: int = 25) -> list[str]:
        """
        Fetches titles of papers in the given arXiv subject that were
        submitted *yesterday* (UTC).

        Args:
            subject (str): e.g. "cs.AI", "quant-ph", etc.
            max_results (int): how many recent papers to fetch for filtering.

        Returns:
            A list of paper titles submitted yesterday.
        """
        yesterday = (datetime.utcnow().date() - timedelta(days=1)).isoformat()
        url = (
            "http://export.arxiv.org/api/query?"
            f"search_query=cat:{subject}"
            f"&sortBy=submittedDate"
            f"&sortOrder=descending"
            f"&max_results={max_results}"
        )
        with urllib.request.urlopen(url) as resp:
            xml_data = resp.read()
        root = ET.fromstring(xml_data)
        ns = {"atom": "http://www.w3.org/2005/Atom"}

        titles = []
        for entry in root.findall("atom:entry", ns):
            pub = entry.find("atom:published", ns).text
            if pub.startswith(yesterday):
                title = entry.find("atom:title", ns).text.strip().replace("\n", " ")
                titles.append(title)

        return titles
  tools:
    - 'find_arxiv_papers'