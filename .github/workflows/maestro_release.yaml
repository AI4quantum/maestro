name: Maestro Release

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv and activate the environment
        uses: astral-sh/setup-uv@v6
        with:
          activate-environment: true

      - name: Install dependencies
        run: |
          uv pip install -e .[crewai]

      - name: Get release name
        id: get_name
        run: python tools/get_release_name.py
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      - name: Mock artifact for test release
        run: |
          mkdir -p dist && echo "test" > dist/fake.txt

      - name: GitHub Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: dist/*
          generate_release_notes: true
          name: ${{ steps.get_name.outputs.release_name }} – ${{ github.ref_name }}

      - name: Strike through used release name
        run: |
          name="${{ steps.get_name.outputs.release_name }}"
          pattern=$(printf '%s' "$name" | sed -e 's/[]\/$*.^[]/\\&/g')
          sed -i "0,/- $pattern/s//- ~~$name~~/" .release_names.md


      - name: Commit and push to new branch
        run: |
          name="${{ steps.get_name.outputs.release_name }}"
          branch="strikeout-${{ github.ref_name }}"
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git checkout -b "$branch"
          git add .release_names.md
          git commit -m "chore: strike out used release name '$name'"
          git push origin "$branch"

  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up Python
  #     uses: actions/setup-python@v5
  #     with:
  #       python-version: "3.12"
  #   - name: Install uv and activate the environment
  #     uses: astral-sh/setup-uv@v6
  #     with:
  #       activate-environment: true
  #   - name: Install dependencies
  #     run: |
  #       uv pip install -e .[crewai]
  #   - name: Run tests
  #     run: |
  #       export PYTHONPATH=$PYTHONPATH:$(pwd)/src
  #       uv run pytest -v

  # build:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12"
  #     - name: Install uv
  #       uses: astral-sh/setup-uv@v6
  #     - name: Build Maestro
  #       shell: bash
  #       run: uv build
  #     - name: Upload artifacts
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: maestro-dist
  #         path: dist/*

  # verify:
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4 # TODO: replace with demo repo once its created
  #       with:
  #         sparse-checkout: demos
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: maestro-dist
  #         path: dist
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12"
  #     - name: Install maestro
  #       shell: bash
  #       run: pip install dist/*.whl
  #     - name: Test distribution
  #       working-directory: demos
  #       shell: bash
  #       run: maestro run workflows/simple/agents.yaml workflows/simple/workflow.yaml
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         GITHUB_USER: ${{ github.actor }}
  # release:
  #   needs: verify
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Set up Python
  #       uses: actions/setup-python@v5
  #       with:
  #         python-version: "3.12"
  #     - name: Get release name
  #       id: get_name
  #       run: python tools/get_release_name.py
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         GITHUB_REPOSITORY: ${{ github.repository }}
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: maestro-dist
  #         path: dist
  #     - name: GitHub Release
  #       uses: softprops/action-gh-release@v2
  #       if: github.ref_type == 'tag'
  #       with:
  #         files: dist/*
  #         generate_release_notes: true
  #         name: ${{ steps.get_name.outputs.release_name }} – ${{ github.ref_name }}